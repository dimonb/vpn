{
  "logging": {
    "logs": {
      "default": { "level": "DEBUG" },
      "tls": { "level": "DEBUG" },
      "access": {
        "level": "INFO",
        "writer": {
          "output": "file",
          "filename": "/logs/access-caddy.log",
          "roll": true,
          "roll_size_mb": 1024,
          "roll_keep": 5,
          "roll_keep_days": 30
        }
      }
    }
  },
  "apps": {
    "layer4": {
      "servers": {
        "l4": {
          "listen": [":443"],
          "routes": [
            {
              "match": [{ "tls": { "sni": ["www.microsoft.com"] } }],
              "handle": [
                { "handler": "proxy", "upstreams": [{ "dial": ["127.0.0.1:8443"] }] }
              ]
            },
            {
              "handle": [
                { "handler": "proxy", "upstreams": [{ "dial": ["127.0.0.1:4443"] }] }
              ]
            }
          ]
        }
      }
    },
    "http": {
      "servers": {
        "http_srv": {
          "listen": [":80"],
          "logs": { "logger_names": { "default": "access" } },
          "routes": [
            { 
              "match": [{ "path": ["/.well-known/*"] }], 
              "handle": [{ "handler": "file_server", "root": "/var/www" }] 
            }
          ]
        },
        "https_srv": {
          "listen": [":4443"],
          "logs": { "logger_names": { "default": "access" } },
          "errors": {
            "routes": [
              {
                "match": [
                  { "expression": "{http.error.status_code} >= 500 && {http.error.status_code} < 600" }
                ],
                "handle": [
                  { "handler": "rewrite", "uri": "/5xx.html" },
                  { "handler": "file_server", "root": "/static", "status_code": "{http.error.status_code}" }
                ]
              },
              {
                "handle": [
                  { "handler": "static_response", "status_code": 500, "body": "Internal Server Error\n" }
                ]
              }
            ]
          },
          "tls_connection_policies": [
            {
              "protocol_min": "tls1.2",
              "protocol_max": "tls1.3",
              "cipher_suites": [
                "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"
              ],
              "curves": ["x25519"]
            }
          ],
          "routes": [
            {
              "handle": [
                {
                  "handler": "headers",
                  "response": {
                    "set": {
                      "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"]
                    }
                  }
                }
              ]
            },
            {
              "match": [{ "path": ["/node/metrics*"] }],
              "handle": [
                {
                  "handler": "authentication",
                  "providers": {
                    "http_basic": {
                      "realm": "metrics",
                      "accounts": [
                        { "username": "metrics", "password": "{{ metrics_pwd | password_hash('bcrypt') }}" }
                      ],
                      "hash": { "algorithm": "bcrypt" }
                    }
                  }
                },
                { "handler": "rewrite", "uri": "/metrics" },
                { "handler": "reverse_proxy", "upstreams": [{ "dial": "127.0.0.1:9100" }] }
              ]
            },
            {
              "match": [{ "path": ["/hy2/metrics*"] }],
              "handle": [
                {
                  "handler": "authentication",
                  "providers": {
                    "http_basic": {
                      "realm": "metrics",
                      "accounts": [
                        { "username": "metrics", "password": "{{ metrics_pwd | password_hash('bcrypt') }}" }
                      ],
                      "hash": { "algorithm": "bcrypt" }
                    }
                  }
                },
                { "handler": "rewrite", "uri": "/metrics" },
                { "handler": "reverse_proxy", "upstreams": [{ "dial": "127.0.0.1:7979" }] }
              ]
            },
            { "match": [{ "path": ["/"] }], "handle": [{ "handler": "file_server", "root": "/static", "index_names": ["index.html"] }] },
            { "match": [{ "path": ["/css/*", "/js/*", "/images/*", "/robots.txt", "/*.html", "/*.css"] }], "handle": [{ "handler": "file_server", "root": "/static" }] },
            {
              "handle": [
                {
                  "handler": "reverse_proxy",
                  "upstreams": [{ "dial": "127.0.0.1:8003" }],
                  "handle_response": [
                    {
                      "match": { "status_code": [401, 403] },
                      "routes": [
                        {
                          "handle": [
                            { "handler": "rewrite", "uri": "/401.html" },
                            { "handler": "file_server", "root": "/static", "status_code": "{http.reverse_proxy.status_code}" }
                          ]
                        }
                      ]
                    },
                    {
                      "match": { "status_code": [404] },
                      "routes": [
                        {
                          "handle": [
                            { "handler": "rewrite", "uri": "/404.html" },
                            { "handler": "file_server", "root": "/static", "status_code": "{http.reverse_proxy.status_code}"}
                          ]
                        }
                      ]
                    },
                    {
                      "match": { "status_code": [500, 502, 503, 504] },
                      "routes": [
                        {
                          "handle": [
                            { "handler": "rewrite", "uri": "/5xx.html" },
                            { "handler": "file_server", "root": "/static", "status_code": "{http.reverse_proxy.status_code}"}
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "tls": {
      "certificates": {
        "automate": ["{{ ansible_host }}"]
      },
      "automation": {
        "policies": [
          {
            "subjects": ["{{ ansible_host }}"],
            "issuers": [
              { "module": "acme", "email": "admin@{{ ansible_host }}" }
            ]
          }
        ]
      }
    }
  }
}