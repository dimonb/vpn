---
- name: Deploy and run Docker Compose on multiple servers
  hosts: vpn
  become: true
  vars:
    config_directory: vpn
    config_owner: root
    config_group: root

  tasks:
    - name: Ensure the configuration directory exists
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ config_owner }}"
        group: "{{ config_group }}"
        mode: '0700'

    - name: Ensure the cert directory exists
      ansible.builtin.file:
        path: "{{ config_directory }}/cert"
        state: directory
        owner: "{{ config_owner }}"
        group: "{{ config_group }}"
        mode: '0700'

    - name: Generate self-signed certificate
      ansible.builtin.shell:
        cmd: openssl req -x509 -newkey rsa:4096 -keyout {{ config_directory }}/cert/key.pem -out {{ config_directory }}/cert/cert.pem -days 365 -nodes -subj "/C=US/ST=State/L=City/O=Organization/CN=i.am.com"
      args:
        creates: "{{ config_directory }}/cert/cert.pem"


    - name: copy cfgapp Python files and configs to the server
      ansible.builtin.synchronize:
        src: ./vpn/cfgapp/
        dest: "{{ config_directory }}/cfgapp/"
        rsync_opts:
          - "--exclude=__pycache__"
          - "--exclude=.*"

    - name: Set correct permissions for cfgapp files
      ansible.builtin.file:
        path: "{{ config_directory }}/cfgapp"
        owner: "{{ config_owner }}"
        group: "{{ config_group }}"
        mode: '0755'
        recurse: true

    - name: Deploy configuration files using templates
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ config_directory }}/{{ item.dest }}"
        owner: "{{ config_owner }}"
        group: "{{ config_group }}"
        mode: "{{ item.mode }}"
      loop:
        - { src: './config.json', dest: 'config.json', mode: '0644' }
        - { src: './vpn/sing-box.json.j2', dest: 'sing-box.json', mode: '0644' }
        - { src: './vpn/docker-compose.yml.j2', dest: 'docker-compose.yml', mode: '0644' }
        - { src: './vpn/Caddyfile.j2', dest: 'Caddyfile', mode: '0644' }

    - name: Run Docker Compose
      ansible.builtin.shell:
        chdir: "{{ config_directory }}"
        cmd: docker compose down && docker compose up --pull always --remove-orphans --force-recreate -d 

